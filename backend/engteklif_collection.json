{
  "info": {
    "_postman_id": "engteklif-api-v2-fixed",
    "name": "EngTeklif API v2.0 - Fixed",
    "description": "M√ºhendislik Teklif ve Dosya Analiz Sistemi - Console Error Fixed\n\nüöÄ **√ñzellikler:**\n- Kullanƒ±cƒ± y√∂netimi ve JWT authentication\n- PDF/DOC/STEP dosya analizi\n- 3D model g√∂rselle≈ütirme\n- Malzeme tanƒ±ma ve fiyatlama\n- Maliyet hesaplama\n- Geometrik tolerans y√∂netimi\n\nüìã **Kullanƒ±m:**\n1. Environment'ƒ± \"EngTeklif Development\" olarak se√ßin\n2. Auth ‚Üí Register/Login ile token alƒ±n\n3. Diƒüer endpoint'leri test edin",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "üè† System",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "API Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/info",
              "host": ["{{base_url}}"],
              "path": ["api", "info"]
            }
          }
        },
        {
          "name": "Home Page",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            }
          }
        }
      ]
    },
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    try {",
                  "        const response = pm.response.json();",
                  "        if (response.success && response.tokens) {",
                  "            pm.environment.set('auth_token', response.tokens.access_token);",
                  "            pm.environment.set('refresh_token', response.tokens.refresh_token);",
                  "            pm.environment.set('user_id', response.user.id);",
                  "            console.log('Registration successful, tokens saved');",
                  "        }",
                  "    } catch (e) {",
                  "        console.log('Error parsing response:', e);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"testuser\",\n    \"name\": \"Test\",\n    \"surname\": \"User\",\n    \"email\": \"test@example.com\",\n    \"password\": \"test123\",\n    \"role\": \"user\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    try {",
                  "        const response = pm.response.json();",
                  "        if (response.success && response.tokens) {",
                  "            pm.environment.set('auth_token', response.tokens.access_token);",
                  "            pm.environment.set('refresh_token', response.tokens.refresh_token);",
                  "            pm.environment.set('user_id', response.user.id);",
                  "            console.log('Login successful, tokens saved');",
                  "        }",
                  "    } catch (e) {",
                  "        console.log('Error parsing response:', e);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"test123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/me",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "me"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    try {",
                  "        const response = pm.response.json();",
                  "        if (response.success && response.tokens) {",
                  "            pm.environment.set('auth_token', response.tokens.access_token);",
                  "            console.log('Token refreshed');",
                  "        }",
                  "    } catch (e) {",
                  "        console.log('Error parsing response:', e);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{refresh_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "refresh"]
            }
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"old_password\": \"test123\",\n    \"new_password\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/change-password",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "change-password"]
            }
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Name\",\n    \"surname\": \"Updated Surname\",\n    \"email\": \"updated@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "profile"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "üë• Users",
      "item": [
        {
          "name": "Get All Users (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "{{user_id}}"]
            }
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Name\",\n    \"surname\": \"Updated Surname\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "{{user_id}}"]
            }
          }
        },
        {
          "name": "User Stats (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "stats"]
            }
          }
        }
      ]
    },
    {
      "name": "üîß Materials",
      "item": [
        {
          "name": "Get All Materials",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/materials?page=1&limit=50",
              "host": ["{{base_url}}"],
              "path": ["api", "materials"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "50"
                }
              ]
            }
          }
        },
        {
          "name": "Create Material (Admin)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    try {",
                  "        const response = pm.response.json();",
                  "        if (response.success && response.material) {",
                  "            pm.environment.set('material_id', response.material.id);",
                  "            console.log('Material created, ID saved');",
                  "        }",
                  "    } catch (e) {",
                  "        console.log('Error parsing response:', e);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test Material\",\n    \"aliases\": [\"TM\", \"TestMat\"],\n    \"density\": 2.85,\n    \"price_per_kg\": 5.50,\n    \"description\": \"Test malzemesi\",\n    \"category\": \"Test\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/materials",
              "host": ["{{base_url}}"],
              "path": ["api", "materials"]
            }
          }
        },
        {
          "name": "Get Material by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/materials/{{material_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "materials", "{{material_id}}"]
            }
          }
        },
        {
          "name": "Search Materials",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/materials?search=6061&category=Al√ºminyum",
              "host": ["{{base_url}}"],
              "path": ["api", "materials"],
              "query": [
                {
                  "key": "search",
                  "value": "6061"
                },
                {
                  "key": "category",
                  "value": "Al√ºminyum"
                }
              ]
            }
          }
        },
        {
          "name": "Get Categories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/materials/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "materials", "categories"]
            }
          }
        }
      ]
    },
    {
      "name": "üí∞ Cost Calculation",
      "item": [
        {
          "name": "Basic Cost Calculation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"volume_mm3\": 125000,\n    \"material_name\": \"6061-T6\",\n    \"main_duration_min\": 45,\n    \"machine_hourly_rate\": 65\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/cost-calculation/basic",
              "host": ["{{base_url}}"],
              "path": ["api", "cost-calculation", "basic"]
            }
          }
        },
        {
          "name": "Comprehensive Cost Calculation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"volume_mm3\": 125000,\n    \"material_name\": \"6061-T6\",\n    \"main_duration_min\": 45,\n    \"tolerance_requirements\": [\n        {\n            \"type\": \"Parallelik\",\n            \"value\": 0.02\n        }\n    ],\n    \"machine_hourly_rate\": 65,\n    \"additional_costs\": [25.50],\n    \"profit_margin\": 0.25\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/cost-calculation/comprehensive",
              "host": ["{{base_url}}"],
              "path": ["api", "cost-calculation", "comprehensive"]
            }
          }
        },
        {
          "name": "Quick Cost Estimate",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"volume_mm3\": 125000,\n    \"material_name\": \"6061-T6\",\n    \"machine_hourly_rate\": 65,\n    \"complexity_factor\": 1.2\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/cost-calculation/quick-estimate",
              "host": ["{{base_url}}"],
              "path": ["api", "cost-calculation", "quick-estimate"]
            }
          }
        },
        {
          "name": "Get Supported Materials",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/cost-calculation/supported-materials",
              "host": ["{{base_url}}"],
              "path": ["api", "cost-calculation", "supported-materials"]
            }
          }
        }
      ]
    },
    {
      "name": "üìÅ File Upload",
      "item": [
        {
          "name": "Get Supported Formats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/upload/supported-formats",
              "host": ["{{base_url}}"],
              "path": ["api", "upload", "supported-formats"]
            }
          }
        },
        {
          "name": "Upload Single File",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    try {",
                  "        const response = pm.response.json();",
                  "        if (response.success && response.file_info) {",
                  "            pm.environment.set('analysis_id', response.file_info.analysis_id);",
                  "            console.log('File uploaded, analysis_id saved');",
                  "        }",
                  "    } catch (e) {",
                  "        console.log('Error parsing response:', e);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/upload/single",
              "host": ["{{base_url}}"],
              "path": ["api", "upload", "single"]
            }
          }
        },
        {
          "name": "Get My Uploads",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/upload/my-uploads?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "upload", "my-uploads"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üéØ 3D Viewer",
      "item": [
        {
          "name": "3D Viewer Main Page",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/3d-viewer",
              "host": ["{{base_url}}"],
              "path": ["3d-viewer"]
            }
          }
        },
        {
          "name": "Static 3D Viewer HTML",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/static/3d-viewer.html",
              "host": ["{{base_url}}"],
              "path": ["static", "3d-viewer.html"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set default base_url if not exists",
          "if (!pm.environment.get('base_url')) {",
          "    pm.environment.set('base_url', 'http://localhost:5000');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Basic response validation",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(10000);",
          "});",
          "",
          "pm.test('Response status is valid', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204, 400, 401, 403, 404, 422, 500]);",
          "});"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "analysis_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "material_id",
      "value": "",
      "type": "string"
    }
  ]
}
